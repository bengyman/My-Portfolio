{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koolp\\\\Downloads\\\\My Portfolio\\\\src\\\\App.js\";\nimport React from 'react';\nimport Navbar from './components/Navbar';\nimport AboutMe from './components/AboutMe'; // Ensure casing matches the file name\nimport Qualifications from './components/Qualifications';\nimport Journey from './components/Journey';\nimport Projects from './components/Projects';\nimport Hobbies from './components/Hobbies';\nimport './styles.css'; // Update to the correct CSS file name\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"aboutMe\",\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(AboutMe, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"qualifications\",\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(Qualifications, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"journey\",\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(Journey, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"projects\",\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(Projects, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      id: \"hobbies\",\n      className: \"section\",\n      children: /*#__PURE__*/_jsxDEV(Hobbies, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n}\n\n// Example logic to add 'active' class based on scroll position\n_c = App;\nwindow.addEventListener('scroll', () => {\n  const sections = document.querySelectorAll('section');\n  const navLinks = document.querySelectorAll('.nav-link');\n  sections.forEach((section, idx) => {\n    const sectionTop = section.offsetTop - 50; // Adjust 50 as needed for offset\n    const sectionBottom = sectionTop + section.offsetHeight;\n    if (window.scrollY >= sectionTop && window.scrollY < sectionBottom) {\n      navLinks.forEach(navLink => {\n        navLink.classList.remove('active');\n      });\n      navLinks[idx].classList.add('active');\n    }\n  });\n});\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","Navbar","AboutMe","Qualifications","Journey","Projects","Hobbies","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","_c","window","addEventListener","sections","document","querySelectorAll","navLinks","forEach","section","idx","sectionTop","offsetTop","sectionBottom","offsetHeight","scrollY","navLink","classList","remove","add","$RefreshReg$"],"sources":["C:/Users/koolp/Downloads/My Portfolio/src/App.js"],"sourcesContent":["import React from 'react';\r\nimport Navbar from './components/Navbar';\r\nimport AboutMe from './components/AboutMe'; // Ensure casing matches the file name\r\nimport Qualifications from './components/Qualifications';\r\nimport Journey from './components/Journey';\r\nimport Projects from './components/Projects';\r\nimport Hobbies from './components/Hobbies';\r\nimport './styles.css'; // Update to the correct CSS file name\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <section id=\"aboutMe\" className=\"section\">\r\n        <AboutMe />\r\n      </section>\r\n      <section id=\"qualifications\" className=\"section\">\r\n        <Qualifications />\r\n      </section>\r\n      <section id=\"journey\" className=\"section\">\r\n        <Journey />\r\n      </section>\r\n      <section id=\"projects\" className=\"section\">\r\n        <Projects />\r\n      </section>\r\n      <section id=\"hobbies\" className=\"section\">\r\n        <Hobbies />\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\n// Example logic to add 'active' class based on scroll position\r\nwindow.addEventListener('scroll', () => {\r\n  const sections = document.querySelectorAll('section');\r\n  const navLinks = document.querySelectorAll('.nav-link');\r\n\r\n  sections.forEach((section, idx) => {\r\n    const sectionTop = section.offsetTop - 50; // Adjust 50 as needed for offset\r\n    const sectionBottom = sectionTop + section.offsetHeight;\r\n\r\n    if (window.scrollY >= sectionTop && window.scrollY < sectionBottom) {\r\n      navLinks.forEach(navLink => {\r\n        navLink.classList.remove('active');\r\n      });\r\n      navLinks[idx].classList.add('active');\r\n    }\r\n  });\r\n});\r\n\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}