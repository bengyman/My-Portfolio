{"ast":null,"code":"import React,{useState}from'react';import{useSprings,animated,interpolate}from'@react-spring/web';import{useDrag}from'react-use-gesture';import styles from'./styles.module.css';import{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const cards=['https://upload.wikimedia.org/wikipedia/commons/f/f5/RWS_Tarot_08_Strength.jpg','https://upload.wikimedia.org/wikipedia/commons/5/53/RWS_Tarot_16_Tower.jpg','https://upload.wikimedia.org/wikipedia/commons/9/9b/RWS_Tarot_07_Chariot.jpg','https://upload.wikimedia.org/wikipedia/commons/d/db/RWS_Tarot_06_Lovers.jpg','https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg','https://upload.wikimedia.org/wikipedia/commons/d/de/RWS_Tarot_01_Magician.jpg'];// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to=i=>({x:0,y:i*-4,scale:1,rot:-10+Math.random()*20,delay:i*100});const from=i=>({x:0,rot:0,scale:1.5,y:-1000});// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans=(r,s)=>\"perspective(1500px) rotateX(30deg) rotateY(\".concat(r/10,\"deg) rotateZ(\").concat(r,\"deg) scale(\").concat(s,\")\");function Deck(){const[gone]=useState(()=>new Set());// The set flags all the cards that are flicked out\nconst[props,api]=useSprings(cards.length,i=>({...to(i),from:from(i)}));// Create a bunch of springs using the helpers above\n// Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\nconst bind=useDrag(_ref=>{let{args:[index],down,movement:[mx],direction:[xDir],velocity}=_ref;const trigger=velocity>0.2;// If you flick hard enough it should trigger the card to fly out\nconst dir=xDir<0?-1:1;// Direction should either point left or right\nif(!down&&trigger)gone.add(index);// If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\napi.start(i=>{if(index!==i)return;// We're only interested in changing spring-data for the current spring\nconst isGone=gone.has(index);const x=isGone?(200+window.innerWidth)*dir:down?mx:0;// When a card is gone it flys out left or right, otherwise goes back to zero\nconst rot=mx/100+(isGone?dir*10*velocity:0);// How much the card tilts, flicking it harder makes it rotate faster\nconst scale=down?1.1:1;// Active cards lift up a bit\nreturn{x,rot,scale,delay:undefined,config:{friction:50,tension:down?800:isGone?200:500}};});if(!down&&gone.size===cards.length)setTimeout(()=>{gone.clear();api.start(i=>to(i));},600);});// Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\nreturn/*#__PURE__*/_jsx(_Fragment,{children:props.map((_ref2,i)=>{let{x,y,rot,scale}=_ref2;return/*#__PURE__*/_jsx(animated.div,{className:styles.deck,style:{x,y},children:/*#__PURE__*/_jsx(animated.div,{...bind(i),style:{transform:interpolate([rot,scale],trans),backgroundImage:\"url(\".concat(cards[i],\")\")}})},i);})});}export default function App(){return/*#__PURE__*/_jsx(\"div\",{className:styles.container,children:/*#__PURE__*/_jsx(Deck,{})});}","map":{"version":3,"names":["React","useState","useSprings","animated","interpolate","useDrag","styles","jsx","_jsx","Fragment","_Fragment","cards","to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","concat","Deck","gone","Set","props","api","length","bind","_ref","args","index","down","movement","mx","direction","xDir","velocity","trigger","dir","add","start","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","children","map","_ref2","div","className","deck","style","transform","backgroundImage","App","container"],"sources":["C:/Users/koolp/Downloads/My Portfolio/src/components/AnimatedTrail.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSprings, animated, interpolate } from '@react-spring/web';\r\nimport { useDrag } from 'react-use-gesture';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nconst cards = [\r\n  'https://upload.wikimedia.org/wikipedia/commons/f/f5/RWS_Tarot_08_Strength.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/5/53/RWS_Tarot_16_Tower.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/9/9b/RWS_Tarot_07_Chariot.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/d/db/RWS_Tarot_06_Lovers.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/d/de/RWS_Tarot_01_Magician.jpg',\r\n];\r\n\r\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\r\nconst to = (i) => ({\r\n  x: 0,\r\n  y: i * -4,\r\n  scale: 1,\r\n  rot: -10 + Math.random() * 20,\r\n  delay: i * 100,\r\n});\r\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 });\r\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\r\nconst trans = (r, s) =>\r\n  `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\r\n\r\nfunction Deck() {\r\n  const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\r\n  const [props, api] = useSprings(cards.length, (i) => ({\r\n    ...to(i),\r\n    from: from(i),\r\n  })); // Create a bunch of springs using the helpers above\r\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\r\n  const bind = useDrag(({ args: [index], down, movement: [mx], direction: [xDir], velocity }) => {\r\n    const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\r\n    const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\r\n    if (!down && trigger) gone.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\r\n    api.start((i) => {\r\n      if (index !== i) return; // We're only interested in changing spring-data for the current spring\r\n      const isGone = gone.has(index);\r\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\r\n      const rot = mx / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\r\n      const scale = down ? 1.1 : 1; // Active cards lift up a bit\r\n      return {\r\n        x,\r\n        rot,\r\n        scale,\r\n        delay: undefined,\r\n        config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\r\n      };\r\n    });\r\n    if (!down && gone.size === cards.length)\r\n      setTimeout(() => {\r\n        gone.clear();\r\n        api.start((i) => to(i));\r\n      }, 600);\r\n  });\r\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\r\n  return (\r\n    <>\r\n      {props.map(({ x, y, rot, scale }, i) => (\r\n        <animated.div className={styles.deck} key={i} style={{ x, y }}>\r\n          {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\r\n          <animated.div\r\n            {...bind(i)}\r\n            style={{\r\n              transform: interpolate([rot, scale], trans),\r\n              backgroundImage: `url(${cards[i]})`,\r\n            }}\r\n          />\r\n        </animated.div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Deck />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}