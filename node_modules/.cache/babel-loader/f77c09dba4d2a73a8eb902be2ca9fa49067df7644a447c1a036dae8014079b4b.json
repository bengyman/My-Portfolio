{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\koolp\\\\Downloads\\\\My Portfolio\\\\src\\\\components\\\\AnimatedTrail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useSprings, animated, interpolate } from '@react-spring/web';\nimport { useDrag } from 'react-use-gesture';\nimport styles from './styles.module.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst cards = ['https://upload.wikimedia.org/wikipedia/commons/f/f5/RWS_Tarot_08_Strength.jpg', 'https://upload.wikimedia.org/wikipedia/commons/5/53/RWS_Tarot_16_Tower.jpg', 'https://upload.wikimedia.org/wikipedia/commons/9/9b/RWS_Tarot_07_Chariot.jpg', 'https://upload.wikimedia.org/wikipedia/commons/d/db/RWS_Tarot_06_Lovers.jpg', 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg', 'https://upload.wikimedia.org/wikipedia/commons/d/de/RWS_Tarot_01_Magician.jpg'];\n\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\nconst to = i => ({\n  x: 0,\n  y: i * -4,\n  scale: 1,\n  rot: -10 + Math.random() * 20,\n  delay: i * 100\n});\nconst from = i => ({\n  x: 0,\n  rot: 0,\n  scale: 1.5,\n  y: -1000\n});\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\nconst trans = (r, s) => `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\nfunction Deck() {\n  _s();\n  const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\n  const [props, api] = useSprings(cards.length, i => ({\n    ...to(i),\n    from: from(i)\n  })); // Create a bunch of springs using the helpers above\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\n  const bind = useDrag(({\n    args: [index],\n    down,\n    movement: [mx],\n    direction: [xDir],\n    velocity\n  }) => {\n    const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\n    const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\n    if (!down && trigger) gone.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\n    api.start(i => {\n      if (index !== i) return; // We're only interested in changing spring-data for the current spring\n      const isGone = gone.has(index);\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\n      const rot = mx / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\n      const scale = down ? 1.1 : 1; // Active cards lift up a bit\n      return {\n        x,\n        rot,\n        scale,\n        delay: undefined,\n        config: {\n          friction: 50,\n          tension: down ? 800 : isGone ? 200 : 500\n        }\n      };\n    });\n    if (!down && gone.size === cards.length) setTimeout(() => {\n      gone.clear();\n      api.start(i => to(i));\n    }, 600);\n  });\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: props.map(({\n      x,\n      y,\n      rot,\n      scale\n    }, i) => /*#__PURE__*/_jsxDEV(animated.div, {\n      className: styles.deck,\n      style: {\n        x,\n        y\n      },\n      children: /*#__PURE__*/_jsxDEV(animated.div, {\n        ...bind(i),\n        style: {\n          transform: interpolate([rot, scale], trans),\n          backgroundImage: `url(${cards[i]})`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Deck, \"gPgtqT3jb+n4ODjZyBvRwGZGcDc=\", false, function () {\n  return [useSprings, useDrag];\n});\n_c = Deck;\nexport default function App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(Deck, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_c2 = App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Deck\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useSprings","animated","interpolate","useDrag","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","cards","to","i","x","y","scale","rot","Math","random","delay","from","trans","r","s","Deck","_s","gone","Set","props","api","length","bind","args","index","down","movement","mx","direction","xDir","velocity","trigger","dir","add","start","isGone","has","window","innerWidth","undefined","config","friction","tension","size","setTimeout","clear","children","map","div","className","deck","style","transform","backgroundImage","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","container","_c2","$RefreshReg$"],"sources":["C:/Users/koolp/Downloads/My Portfolio/src/components/AnimatedTrail.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSprings, animated, interpolate } from '@react-spring/web';\r\nimport { useDrag } from 'react-use-gesture';\r\n\r\nimport styles from './styles.module.css';\r\n\r\nconst cards = [\r\n  'https://upload.wikimedia.org/wikipedia/commons/f/f5/RWS_Tarot_08_Strength.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/5/53/RWS_Tarot_16_Tower.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/9/9b/RWS_Tarot_07_Chariot.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/d/db/RWS_Tarot_06_Lovers.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/thumb/8/88/RWS_Tarot_02_High_Priestess.jpg/690px-RWS_Tarot_02_High_Priestess.jpg',\r\n  'https://upload.wikimedia.org/wikipedia/commons/d/de/RWS_Tarot_01_Magician.jpg',\r\n];\r\n\r\n// These two are just helpers, they curate spring data, values that are later being interpolated into css\r\nconst to = (i) => ({\r\n  x: 0,\r\n  y: i * -4,\r\n  scale: 1,\r\n  rot: -10 + Math.random() * 20,\r\n  delay: i * 100,\r\n});\r\nconst from = (i) => ({ x: 0, rot: 0, scale: 1.5, y: -1000 });\r\n// This is being used down there in the view, it interpolates rotation and scale into a css transform\r\nconst trans = (r, s) =>\r\n  `perspective(1500px) rotateX(30deg) rotateY(${r / 10}deg) rotateZ(${r}deg) scale(${s})`;\r\n\r\nfunction Deck() {\r\n  const [gone] = useState(() => new Set()); // The set flags all the cards that are flicked out\r\n  const [props, api] = useSprings(cards.length, (i) => ({\r\n    ...to(i),\r\n    from: from(i),\r\n  })); // Create a bunch of springs using the helpers above\r\n  // Create a gesture, we're interested in down-state, delta (current-pos - click-pos), direction and velocity\r\n  const bind = useDrag(({ args: [index], down, movement: [mx], direction: [xDir], velocity }) => {\r\n    const trigger = velocity > 0.2; // If you flick hard enough it should trigger the card to fly out\r\n    const dir = xDir < 0 ? -1 : 1; // Direction should either point left or right\r\n    if (!down && trigger) gone.add(index); // If button/finger's up and trigger velocity is reached, we flag the card ready to fly out\r\n    api.start((i) => {\r\n      if (index !== i) return; // We're only interested in changing spring-data for the current spring\r\n      const isGone = gone.has(index);\r\n      const x = isGone ? (200 + window.innerWidth) * dir : down ? mx : 0; // When a card is gone it flys out left or right, otherwise goes back to zero\r\n      const rot = mx / 100 + (isGone ? dir * 10 * velocity : 0); // How much the card tilts, flicking it harder makes it rotate faster\r\n      const scale = down ? 1.1 : 1; // Active cards lift up a bit\r\n      return {\r\n        x,\r\n        rot,\r\n        scale,\r\n        delay: undefined,\r\n        config: { friction: 50, tension: down ? 800 : isGone ? 200 : 500 },\r\n      };\r\n    });\r\n    if (!down && gone.size === cards.length)\r\n      setTimeout(() => {\r\n        gone.clear();\r\n        api.start((i) => to(i));\r\n      }, 600);\r\n  });\r\n  // Now we're just mapping the animated values to our view, that's it. Btw, this component only renders once. :-)\r\n  return (\r\n    <>\r\n      {props.map(({ x, y, rot, scale }, i) => (\r\n        <animated.div className={styles.deck} key={i} style={{ x, y }}>\r\n          {/* This is the card itself, we're binding our gesture to it (and inject its index so we know which is which) */}\r\n          <animated.div\r\n            {...bind(i)}\r\n            style={{\r\n              transform: interpolate([rot, scale], trans),\r\n              backgroundImage: `url(${cards[i]})`,\r\n            }}\r\n          />\r\n        </animated.div>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <div className={styles.container}>\r\n      <Deck />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}